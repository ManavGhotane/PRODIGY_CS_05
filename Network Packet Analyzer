from scapy.all import sniff
from scapy.layers.inet import IP, TCP, UDP, ICMP

def packet_callback(packet):
    if packet.haslayer(IP):
        ip_layer = packet[IP]

        src_ip = ip_layer.src
        dst_ip = ip_layer.dst
        proto = ip_layer.proto

        if packet.haslayer(TCP):
            protocol = 'TCP'
            src_port = packet[TCP].sport
            dst_port = packet[TCP].dport
        elif packet.haslayer(UDP):
            protocol = 'UDP'
            src_port = packet[UDP].sport
            dst_port = packet[UDP].dport
        elif packet.haslayer(ICMP):
            protocol = 'ICMP'
            src_port = dst_port = None
        else:
            protocol = 'Unknown'
            src_port = dst_port = None

        print(f"Protocol: {protocol}")
        print(f"Source IP: {src_ip}")
        print(f"Destination IP: {dst_ip}")
        if src_port and dst_port:
            print(f"Source Port: {src_port}")
            print(f"Destination Port: {dst_port}")
        print(f"Raw Payload: {bytes(packet[TCP].payload).decode('utf-8', errors='ignore') if protocol == 'TCP' else 'N/A'}")
        print("-" * 50)

print("Starting packet capture...")
sniff(filter="ip", prn=packet_callback, store=False)
